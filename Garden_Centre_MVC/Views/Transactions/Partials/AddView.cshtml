@model Garden_Centre_MVC.ViewModels.Transactions.AddViewModel

<form>
    <div class="form-group">
        <h2>Customer</h2>
        @Html.DropDownListFor(m => m.transactionOverview.Customer, new SelectList(Model.CustomerList, "CustomerId", "FullName"), "Select Customer", new { @id = "Add_CustomerSelection", @class = "form-control" })
        @Html.ValidationMessageFor(m => m.transactionOverview.Customer)
    </div>

    <div class="form-group">
        <h2>Item</h2>
        @Html.DropDownListFor(m => m.items, new SelectList(Model.ItemList, "ItemId", "Description"), "Select Item", new { @id = "Add_ItemSelection", @class = "form-control" })
        @Html.ValidationMessageFor(m => m.items)
    </div>
</form>
@if (Model.items.Count > 0)
{
    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <td>Item</td>
                <td>Price</td>
                <td>Operations</td>
            </tr>
        </thead>
        <tbody>
            @{
                float fVal = 0.0f;
            }

            @foreach (Garden_Centre_MVC.Models.Item item in Model.items)
            {
                <tr>
                    <td>@item.Description</td>
                    <td>£@item.ItemPrice</td>
                </tr>

                fVal += item.ItemPrice;
            }
            <tr>
                <td>Transaction Value:</td>
                <td>£@fVal</td>
            </tr>
        </tbody>
    </table>
}

@if (Model.transactionOverview.Customer != null && Model.items.Count > 0)
{
    <button id="Add_Save" class="btn btn-primary">Save</button>
}
<button id="Add_Cancel" class="btn btn-primary">Cancel</button>

<script type="text/javascript">
    $(document).ready(function () {
        $("#Add_Cancel").on("click", function (e) {
            e.preventDefault();
            @if (Model.items.Count > 0 && Model.transactionOverview.Customer != null)
            {
                @:if (confirm("Are you sure you would like to cancel this transaction ?")) {
                    @:$("#Index_AddView").delay(100).slideUp("slow", "swing", function (e)
                    @:{
                        @:$("#Index_AddView").html("");
                    @:});
                @:}
            }
            else
            {
                @:$("#Index_AddView").delay(100).slideUp("slow", "swing", function (e)
                    @:{
                        @:$("#Index_AddView").html("");
                    @:});
            }
         });

        $("#Add_Save").on("click", function (e) {
            e.preventDefault();
             $.ajax(
                    {
                        type: "POST",
                        data: ({ prevVM: '@Html.Raw(Json.Encode(Model))' }),
                        url: '@Url.Action("SerializeAdd", "Transactions")',
                        success: function (result) {
                            $("#Index_AddView").delay(100).slideUp("slow", "swing", function (e)
                            {
                                $("#Index_AddView").html("");
                            });
                            $("#View").html(result);

                        },
                        error: function (x, e, r) {
                            alert(e + " " + r);
                            alert(x.responseText);
                        }
                    });
        });

        $("#Add_CustomerSelection").on("change", (function (e)
        {
            e.preventDefault();
            if ($("#Add_CustomerSelection").val() === '')
            {
                @if (Model.transactionOverview.Customer != null)
                {
                    @:alert("Please select a valid customer");
                    @:$("#Add_CustomerSelection").val('@Model.transactionOverview.Customer.CustomerId');
                }
            }
            if ($("#Add_CustomerSelection").val() !== '')
            {
                var v = $("#Add_CustomerSelection").val();
                $.ajax(
                    {
                        type: "POST",
                        data: ({ prevVM: '@Html.Raw(Json.Encode(Model))', customerId: $("#Add_CustomerSelection").val() }),
                        url: '@Url.Action("SelectCustomer", "Transactions")',
                        success: function (result) {
                            $("#Index_AddView").html(result);
                            $("#Add_CustomerSelection").prop("selectedIndex", v).change(function (e) { this.val(e.val()); e.preventDefault(); });
                            $("#Add_ItemSelection").prop("selectedIndex", '0').change(function (e) { this.val(e.val()); e.preventDefault(); });
                        },
                        error: function (x, e, r) {
                            alert(e + " " + r);
                            alert(x.responseText);
                        }
                    });
                }
            }));

    $("#Add_ItemSelection").on("change", (function (e)
    {
        e.preventDefault();
        if ($("#Add_ItemSelection").val() !== 0)
        {
            $.ajax(
            {
                type: "POST",
                data: ({ prevVM: '@Html.Raw(Json.Encode(Model))', itemId: $("#Add_ItemSelection").val() }),
                url: '@Url.Action("AddItem", "Transactions")',
                success: function (result) {
                    $("#Index_AddView").html(result);
                    @if (Model.transactionOverview.Customer != null)
                    {
                        @:$("#Add_CustomerSelection").prop("selectedIndex", '@Model.transactionOverview.CustomerId').change(function (e) { this.val(e.val()); e.preventDefault(); });
                    }
                    $("#Add_ItemSelection").prop("selectedIndex", '0').change(function (e) { this.val(e.val); e.preventDefault(); });
                },
                error: function (x, e, r) {
                    alert(e + " " + r);
                    alert(x.responseText);
                }
            });
        }
    }));
});
</script>