@model Garden_Centre_MVC.ViewModels.Transactions.HistoricViewModel

<table id="HistoricTransactions" class="table table-bordered table-hover">
</table>

<!--This script is specific to the historic view. It is responsable for setting up any listeners and loading the tables.-->
<script type="text/javascript">
    var prevOpenedTN = '0';
    $(document).ready(function () {
        ///////////////////
        //These are the headers passed to the paging class which is responsible for loading the table
        var headers = ["Transaction Number", "Date", "Time", "Customer", "Total Value", "Actions"];
        //This map will map a name to the index of a property in a JSON object, this is passed to the Paging class as well.
        var searchTerms = new Map();
        searchTerms.set("Transaction Number", 1);
        searchTerms.set("Full Name", 6);
        searchTerms.set("Total Value", 2);
        //Create a new paging object:
        //The params are
        //Data
        //Table ID
        //Headings
        //Search terms - used by the search box in the table
        //Row lambda - This is called for each peice of data and is responsible for how the row is created.
        var paging = new Paging(JSON.parse('@Html.Raw(Model.TransactionOverviewsJSON)'), "HistoricTransactions", headers, searchTerms,
            (dataObj, table) => {
                //Create a table row
                var tr = document.createElement("tr");
                //Create a table cell for the transaction number
                var td = document.createElement("td");
                //Set the value of the cell
                td.innerHTML = dataObj.TransactionNumber;
                //add it to the row
                tr.appendChild(td);

                //Format the date
                var date = dataObj.Date;
                var Tindex = date.indexOf("T", 0);
                var year = date.slice(0, 4);
                var month = date.slice(5, 7);
                var day = date.slice(8, 10);
                date = day + "/" + month + "/" + year;

                //Format the time
                var time = dataObj.Date;
                time = time.slice(Tindex + 1, time.length);
                time = time.slice(0, time.indexOf(".", 0));

                //Create a table cell for the date
                td = document.createElement("td");
                td.innerHTML = date;
                tr.appendChild(td);

                //Create a table cell for the time
                td = document.createElement("td");
                td.innerHTML = time;
                tr.appendChild(td);

                //Create a table cell for the customers full name
                td = document.createElement("td");
                td.innerHTML = dataObj.Customer.FullName;
                tr.appendChild(td);

                //Create a table cell for the total value of the transaction
                td = document.createElement("td");
                td.innerHTML = "£" + dataObj.TotalValue;
                tr.appendChild(td);

                //Create a table cell for the actions (view, edit and delete) for each transaction.
                td = document.createElement("td");
                var btn = document.createElement("button");
                btn.setAttribute("style", "background: none; border: none; color:#2c3e50;");
                btn.setAttribute("class", "viewBtn btn btn-primary");
                btn.setAttribute("title", "View the indiviudal items that make up this transaction !");
                btn.setAttribute("transactionNumber", dataObj.TransactionNumber);
                btn.addEventListener("click", function (e) {
                    e.preventDefault();
                    var transactionNumber = $(this).attr("transactionNumber");
                    $.ajax(
                    {
                        type: "POST",
                        data: ({ _transactionNumber: transactionNumber }),
                        url: '@Url.Action("ExtendedView", "Transactions")',
                        success: function (result) {
                            $("#Index_AddView").delay(100).slideUp("slow");

                            $("#Historic_DropDownViewTR" + transactionNumber).attr("style", "display:table-row;");
                            $("#Historic_DropDownView" + transactionNumber).delay(100).slideDown("slow").html(result);

                            if (prevOpenedTN !== '0' && prevOpenedTN !== transactionNumber) {
                                $("#Historic_DropDownView" + prevOpenedTN).delay(100).slideUp("slow", "swing", function (e) {
                                    $("#Historic_DropDownViewTR" + prevOpenedTN).attr("style", "display:none;");
                                    prevOpenedTN = transactionNumber;
                                });
                            }
                            else
                            {
                                prevOpenedTN = transactionNumber;
                            }

                        },
                        error: function (x, e, r) {
                            alert(e + " " + r);
                            alert(x.responseText);
                        }
                     });
                });
                var icon = document.createElement("i");
                icon.setAttribute("class", "fa fa-eye");
                btn.appendChild(icon);
                td.appendChild(btn);

                if (dataObj.Customer.CustomerDeleted === false) {
                    @if (Garden_Centre_MVC.Attributes.Assets.CurrentUser.EmployeeLogin.Employee.Admin)
                    {
                        @:btn = document.createElement("button");
                        @:btn.setAttribute("style", "background: none; border: none; color:#2c3e50;");
                        @:btn.setAttribute("class", "editBtn btn btn-primary");
                        @:btn.setAttribute("title", "Edit the contents of this transaction !");
                        @:btn.setAttribute("transactionNumber", dataObj.TransactionNumber);
                        @:btn.addEventListener("click", function (e) {
                            @:e.preventDefault();
                            @:var transactionNumber = $(this).attr("transactionNumber");

                            @:$.ajax(
                            @:{
                                @:type: "POST",
                                @:data: ({ _transactionNumber: transactionNumber }),
                                @:url: '@Url.Action("EditView", "Transactions")',
                                @:success: function (result) {
                                    @:$("#Index_AddView").delay(100).slideUp("slow");

                                    @:$("#Historic_DropDownViewTR" + transactionNumber).attr("style", "display:table-row;");
                                    @:$("#Historic_DropDownView" + transactionNumber).delay(100).slideDown("slow").html(result);

                                    @:if (prevOpenedTN !== '0' && prevOpenedTN !== transactionNumber) {
                                        @:$("#Historic_DropDownView" + prevOpenedTN).delay(100).slideUp("slow", "swing", function (e) {
                                            @:$("#Historic_DropDownViewTR" + prevOpenedTN).attr("style", "display:none;");
                                            @:prevOpenedTN = transactionNumber;
                                        @:});
                                    @:}
                                    @:else
                                    @:{
                                        @:prevOpenedTN = transactionNumber;
                                    @:}

                                @:},
                                @:error: function (x, e, r) {
                                    @:alert(e + " " + r);
                                    @:alert(x.responseText);
                                @:}
                            @:});
                        @:});
                        @:icon = document.createElement("i");
                        @:icon.setAttribute("class", "fa fa-edit");
                        @:btn.appendChild(icon);
                        @:td.appendChild(btn);

                        @:btn = document.createElement("button");
                        @:btn.setAttribute("style", "background: none; border: none; color:#2c3e50;");
                        @:btn.setAttribute("class", "delBtn btn btn-primary");
                        @:btn.setAttribute("title", "Delete this transaction !");
                        @:btn.setAttribute("transactionNumber", dataObj.TransactionNumber);
                        @:btn.addEventListener("click", function (e) {
                        @:e.preventDefault();
                        @:var transactionNumber = $(this).attr("transactionNumber");

                        @:bootbox.confirm("Are you sure you wish to delete this transaction?", function (result)
                        @:{
                            @:if (result)
                            @:{
                                                    @:$.ajax(
                                @:{
                                @:type: "POST",
                            @:data: ({ _transactionNumber: transactionNumber }),
                            @:url: '@Url.Action("DeleteTransaction", "Transactions")',
                            @:success: function (result) {
                                @:$("#Index_Feedback").slideUp("slow", "swing", function (e) {
                                    @:$("#Index_Feedback").delay(100).slideDown("slow").html("<h1>Successfully Deleted The Transaction</h1>").delay(3000).slideUp("slow");
                                    @:});
                               @: $("#View").html(result);
                                @:},
                           @: error: function (x, e, r) {
                                  @:  alert(e + " " + r);
                                @:    alert(x.responseText);
                                @:}
                            @:});
                            @:}
                        @:});
                    @:});
                        @:icon = document.createElement("i");
                        @:icon.setAttribute("class", "fa fa-trash");
                        @:btn.appendChild(icon);
                        @:td.appendChild(btn);
                    }
                }

                tr.appendChild(td);

                //Add the row to the table
                table.appendChild(tr);

                //Create a hidden row for the edit and extended view drop down.
                tr = document.createElement("tr");
                tr.setAttribute("style", "display:none;");
                tr.setAttribute("id", "Historic_DropDownViewTR" + dataObj.TransactionNumber);
                td = document.createElement("td");
                td.setAttribute("colspan", 6);
                td.setAttribute("id", "Historic_DropDownViewTD" + dataObj.TransactionNumber);
                var div = document.createElement("div");
                div.setAttribute("hidden", "hidden");
                div.setAttribute("id", "Historic_DropDownView" + dataObj.TransactionNumber)
                td.appendChild(div);
                tr.appendChild(td);
                table.appendChild(tr);
            }, "btn btn-primary", false);
    });
</script>